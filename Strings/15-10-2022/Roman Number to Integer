//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution {
  public:
    int romanToDecimal(string &str) {
        
        unordered_map<char, int> mp;
        
        mp.insert({'I', 1});
        mp.insert({'V', 5});
        mp.insert({'X', 10});
        mp.insert({'L', 50});
        mp.insert({'C' ,100});
        mp.insert({ 'D' , 500});
        mp.insert({ 'M' , 1000});
        
        stack<int> s;
        s.push(mp[str[0]]);
        int v=0;
        int n= str.size();
        
        for(int i=1;i<n;i++)
        {
            if(mp[str[i]]<s.top())
            {
                s.push(mp[str[i]]);
            }
            else
            {
                int a = s.top();
                s.pop();
                s.push(mp[str[i]]-a);
            }
        }
        while(!s.empty())
        {
            v+=s.top();
            s.pop();
        }
        return v;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        string s;
        cin >> s;
        Solution ob;
        cout << ob.romanToDecimal(s) << endl;
    }
}
// } Driver Code Ends

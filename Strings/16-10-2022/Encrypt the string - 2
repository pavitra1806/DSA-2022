//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

#include<unordered_map>
#include<vector>
class Solution {
  public:
 
    string toHex(int num1){
      if (num1 == 0)
         return "0";
      u_int num = num1;
      string s = "";
      while (num) {
         int temp = num % 16;
         if (temp <= 9)
            s += (48 + temp);
         else
            s += (87 + temp);
         num = num / 16;
      }
      reverse(s.begin(), s.end());
      return s;
   }
  
    string encryptString(string S) {
        
        unordered_map<char, int> m;
        vector<char> s;
        vector<int> p;
        string str="";
        
        for(int i=0;i<S.size();i++)
        {
            m[S[i]]++;
        }
        
        for(auto a:m)
        {
            s.push_back(a.first);
            p.push_back(a.second);
            //cout << a.second << endl;
        }
        
        
        
        int len = s.size();
        for(int i=len-1;i>=0;i--)
        {
            str+=s[i];
            str+=toHex(p[i]);
        }
        
        reverse(str.begin(), str.end());
        return str;
        
    }
};

//{ Driver Code Starts.
int main() {
   
        string S = "adf";

        Solution ob;
        cout<<ob.encryptString(S)<<endl;
    
    return 0;
}
// } Driver Code Ends
